name: VSCode Extension Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        type: choice
        options:
          - patch
          - minor
          - major

# ジョブに必要な権限を設定
permissions:
  contents: write # リポジトリコンテンツの読み書き権限（コミット、タグ、リリース作成に必要）
  issues: write # 必要に応じてイシューにコメントする場合
  pull-requests: write # 必要に応じてPRにコメントする場合

env:
  STORE_PATH:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 全履歴が必要

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "latest" # package.jsonのpnpmバージョンフィールドを参照
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup GitHub Config
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Bump Version and Generate CHANGELOG
        run: |
          if [ -z "${{ github.event.inputs.release_type }}" ]; then
            pnpm changelogen --release --noAuthors --no-github
          else
            pnpm changelogen --release --${{ github.event.inputs.release_type }} --noAuthors --no-github
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish to Visual Studio Marketplace
        run: |
          # generate .vsix
          pnpm vsce package

          # publish
          pnpm vsce publish -p ${{ secrets.VSCE_PAT }}

      # CHANGELOGの内容を含めたGitHubリリースを作成
      - name: Create GitHub Release
        run: |
          # push commit and tag
          git push --all

          # get version
          VERSION=`jq -r ".version" ./package.json`

          # create github release
          pnpm changelogen gh release "v${VERSION}"

          # attach .vsix file
          gh release upload "v${VERSION}" *.vsix
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
